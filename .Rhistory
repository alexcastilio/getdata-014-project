getwd()
library(data.table)
library(LaF)
col_names <- read.table(file="data/features.txt",header = F, sep = " ",colClasses = c("integer","character"))
col_names <- col_names[2]
#Create conection to Fixed Width File
train_data <- laf_open_fwf(filename = "data/train/X_train.txt",
column_types = rep("numeric",dim(col_names)[1]),
column_widths = rep(16,dim(col_names)[1]),
#column_names=c(col_names),
trim = T)
#Get data from file
train_data<-train_data_con[,]
#Close Connection
close(train_data_con)
close(train_data)
train_data_con <- laf_open_fwf(filename = "data/train/X_train.txt",
column_types = rep("numeric",dim(col_names)[1]),
column_widths = rep(16,dim(col_names)[1]),
#column_names=c(col_names),
trim = T)
#Get data from file
train_data<-train_data_con[,]
#Close Connection
close(train_data_con)
colnames(train_data)<-col_names
head(train_data)
colnames(train_data)
sizeof(col_names)
length(col_names)
size(col_names)
col_names
colnames<-(train_data,col_names)
deparse(as.character(col_names))
parse(as.character(col_names))
parse(file="",text=as.character(col_names))
expression(as.character(col_names))
as.expression(as.character(col_names))
call(as.character(col_names))
eval(as.character(col_names))
eval(expression(as.character(col_names)))
eval(as.expression(as.character(col_names)))
force(as.character(col_names))
parse("1+1")
parse(text="1+1")
eval(parse(text="1+1")
)
eval(parse(text = as.character(col_names)))
col_names <- eval(parse(text = as.character(col_names[2])))
col_names <- read.table(file="data/features.txt",header = F, sep = " ",colClasses = c("integer","character"))
col_names <- eval(parse(text = as.character(col_names[2])))
#Create conection to Fixed Width File
train_data_con <- laf_open_fwf(filename = "data/train/X_train.txt",
column_types = rep("numeric",dim(col_names)[1]),
column_widths = rep(16,dim(col_names)[1]),
column_names=c(col_names),
trim = T)
#Get data from file
train_data<-train_data_con[,]
#Close Connection
close(train_data_con)
head(train_data)
col_names
names(train_data)<-col_names
colnames(train_data)
head(train_data)
data_con <- laf_open_fwf(filename = "data/train/X_test.txt",
column_types = rep("numeric",dim(col_names)[1]),
column_widths = rep(16,dim(col_names)[1]),
column_names = col_names,
trim = T)
#Get data from file X_test.txt
test_data<-data_con[,]
#Close Connection to X_test.txt
close(data_con)
data_con <- laf_open_fwf(filename = "data/test/X_test.txt",
column_types = rep("numeric",dim(col_names)[1]),
column_widths = rep(16,dim(col_names)[1]),
column_names = col_names,
trim = T)
#Get data from file X_test.txt
test_data<-data_con[,]
#Close Connection to X_test.txt
close(data_con)
data_con <- laf_open_fwf(filename = "data/test/X_test.txt",
column_types = rep("numeric",dim(col_names)[1]),
column_widths = rep(16,dim(col_names)[1]),
column_names = col_names,
trim = T)
#Get data from file X_test.txt
test_data<-data_con[,]
#Close Connection to X_test.txt
close(data_con)
data_con <- laf_open_fwf(filename = "data/test/X_test.txt",
column_types = rep("numeric",dim(col_names)[1]),
column_widths = rep(16,dim(col_names)[1]),
column_names = col_names,
trim = T)
length(col_names)
data_con <- laf_open_fwf(filename = "data/test/X_test.txt",
column_types = rep("numeric",length(col_names)),
column_widths = rep(16,length(col_names)),
column_names = col_names,
trim = T)
#Get data from file X_test.txt
test_data<-data_con[,]
#Close Connection to X_test.txt
close(data_con)
head(test_data)
head(train_data)
col_names
data_con <- laf_open_fwf(filename = "data/train/X_train.txt",
column_types = rep("numeric",length(col_names)),
column_widths = rep(16,length(col_names)),
column_names = col_names,
trim = T)
#Get data from file X_train.txt
train_data<-data_con[,]
#Close Connection to X_train.txt
close(data_con)
head(train_data)
library(dplyr)
library(dply)
install.packages("dplyr")
library(dplyr)
y_text <- read.csv("data/train/y_train.txt",header = F,colClasses="numeric")
head(y_test)
head(y_text)
subject_train <- read.csv("data/train/subject_train.txt",header = F,colClasses="numeric")
y_train<-y_text
y_test <- read.csv("data/test/y_test.txt",header = F,colClasses="numeric")
#Read subject_test.txt
subject_test <- read.csv("data/test/subject_test.txt",header = F,colClasses="numeric")
train_data2<-mutate(train_data,y_train=y_train)
y_train
train_data2<-mutate(train_data,y_train=y_train)
typeof(y_train)
as.numeric(y_train)
as.integer(y_train)
1:3
as.integer(y_train)
as.integer(unlist(y_train))
train_data2<-mutate(train_data,y_train=as.integer(unlist(y_train)))
head(train_data2)
train_data<-mutate(train_data,subject_train=as.integer(unlist(subject_train)))
test_data<-mutate(test_data,y_test=as.integer(unlist(y_test)))
test_data<-mutate(test_data,subject_test=as.integer(unlist(subject_test)))
head(test_data)
full_data<-rbind(train_data,test_data)
head(train_data)
train_data<-mutate(train_data,y_train=as.integer(unlist(y_train)))
head(train_data)
full_data<-rbind(train_data,test_data)
col_names <- read.table(file="data/features.txt",header = F, sep = " ",colClasses = c("integer","character"))
col_names <- eval(parse(text = as.character(col_names[2])))
#Create conection to Fixed Width File X_train.txt
data_con <- laf_open_fwf(filename = "data/train/X_train.txt",
column_types = rep("numeric",length(col_names)),
column_widths = rep(16,length(col_names)),
column_names = col_names,
trim = T)
#Get data from file X_train.txt
train_data<-data_con[,]
#Close Connection to X_train.txt
close(data_con)
#Read y_train.txt
y_train <- read.csv("data/train/y_train.txt",header = F,colClasses="numeric")
#Read subject_train.txt
subject_train <- read.csv("data/train/subject_train.txt",header = F,colClasses="numeric")
#Merges y_train and subject_train with train_data
train_data<-mutate(train_data,y_train=as.integer(unlist(y_train)))
train_data<-mutate(train_data,subject_train=as.integer(unlist(subject_train)))
#Create conection to Fixed Width File X_test.txt
data_con <- laf_open_fwf(filename = "data/test/X_test.txt",
column_types = rep("numeric",length(col_names)),
column_widths = rep(16,length(col_names)),
column_names = col_names,
trim = T)
#Get data from file X_test.txt
test_data<-data_con[,]
#Close Connection to X_test.txt
close(data_con)
#Read y_test.txt
y_test <- read.csv("data/test/y_test.txt",header = F,colClasses="numeric")
#Read subject_test.txt
subject_test <- read.csv("data/test/subject_test.txt",header = F,colClasses="numeric")
#Merges y_test and subject_tset with test_data
test_data<-mutate(test_data,y_test=as.integer(unlist(y_test)))
test_data<-mutate(test_data,subject_test=as.integer(unlist(subject_test)))
full_data<-rbind(train_data,test_data)
names(train_data)
names(test_data)
col_names <- read.table(file="data/features.txt",header = F, sep = " ",colClasses = c("integer","character"))
col_names <- eval(parse(text = as.character(col_names[2])))
#Create conection to Fixed Width File X_train.txt
data_con <- laf_open_fwf(filename = "data/train/X_train.txt",
column_types = rep("numeric",length(col_names)),
column_widths = rep(16,length(col_names)),
column_names = col_names,
trim = T)
#Get data from file X_train.txt
train_data<-data_con[,]
#Close Connection to X_train.txt
close(data_con)
#Read y_train.txt
y_train <- read.csv("data/train/y_train.txt",header = F,colClasses="numeric")
#Read subject_train.txt
subject_train <- read.csv("data/train/subject_train.txt",header = F,colClasses="numeric")
#Merges y_train and subject_train with train_data
train_data<-mutate(train_data,y=as.integer(unlist(y_train)))
train_data<-mutate(train_data,subject=as.integer(unlist(subject_train)))
#Create conection to Fixed Width File X_test.txt
data_con <- laf_open_fwf(filename = "data/test/X_test.txt",
column_types = rep("numeric",length(col_names)),
column_widths = rep(16,length(col_names)),
column_names = col_names,
trim = T)
#Get data from file X_test.txt
test_data<-data_con[,]
#Close Connection to X_test.txt
close(data_con)
#Read y_test.txt
y_test <- read.csv("data/test/y_test.txt",header = F,colClasses="numeric")
#Read subject_test.txt
subject_test <- read.csv("data/test/subject_test.txt",header = F,colClasses="numeric")
#Merges y_test and subject_tset with test_data
test_data<-mutate(test_data,y=as.integer(unlist(y_test)))
test_data<-mutate(test_data,subject=as.integer(unlist(subject_test)))
full_data<-rbind(train_data,test_data)
a<-lapply(full_data,mean)
a
std_dev_data <- lapply(full_data,sd)
mean_data <- lapply(full_data,mean)
std_dev_data
activity_labels <- read.table("data/activity_labels.txt",header = F,colClasses=c("integer","character"))
activity_labels
activity_labels <- activity_labels[2])
activity_labels <- activity_labels[2]
activity_labels
activity_labels[2]
activity_labels$V2[2]
summary(y_test)
summary(subject_test)
full_data<-mutate(full_data,activity=activity_labels$V2[y])
head(full_data)
library(reshape2)]
library(reshape2)
a<-dcast(full_data,. ~activity,mean)
a<-dcast(full_data,activity ~ .,mean)
a<-dcast(full_data,activity ~ -average,mean)
head(full_data)
a<-dcast(full_data,activity ~ tBodyAcc.mean...X:y,mean)
a
a<-dcast(full_data,activity ~ tBodyAcc.mean...X,mean)
a
full_data <- group_by(full_data,activity)
summarise(full_data)
summarise(full_data,.,mean)
summarise(full_data,*,mean)
full_data
full_data<-mutate(full_data,activity=activity_labels$V2[y])
full_data<-rbind(train_data,test_data)]
full_data<-rbind(train_data,test_data)
full_data<-mutate(full_data,activity=activity_labels$V2[y])
full_data %>% group_by(activity) %>% summarise_each(funs(mean))
final_data <- full_data %>% group_by(activity) %>% summarise_each(funs(mean))
final_data
head(final_data)
final_data
a<-as.data.frame(final_data)
head(a)
a
final_data <- full_data %>% group_by(activity,y) %>% summarise_each(funs(mean))
final_data <- as.data.frame(final_data)
final_data
final_data <- full_data %>% group_by(activity,subject) %>% summarise_each(funs(mean))
final_data <- as.data.frame(final_data)
final_data
head(final_data)
